name: Publish Docker Images to GitHub Container Registry
on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_BASE: ${{ github.repository_owner }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # base-dev

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-base-dev
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/base-dev

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push base Docker image
        id: build-and-push-base-dev
        uses: docker/build-push-action@v4
        with:
          context: ./docker/base-dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-base-dev.outputs.tags }}
          labels: ${{ steps.meta-base-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # cpp-dev
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-cpp-dev
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/cpp-dev

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push cpp-dev Docker image
        id: build-and-push-cpp-dev
        uses: docker/build-push-action@v4
        with:
          context: ./docker/cpp-dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-cpp-dev.outputs.tags }}
          labels: ${{ steps.meta-cpp-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # java-dev
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-java-dev
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/java-dev

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push java-dev Docker image
        id: build-and-push-java-dev
        uses: docker/build-push-action@v4
        with:
          context: ./docker/java-dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-java-dev.outputs.tags }}
          labels: ${{ steps.meta-java-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # python-dev
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta-python-dev
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/python-dev

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push python-dev Docker image
        id: build-and-push-python-dev
        uses: docker/build-push-action@v4
        with:
          context: ./docker/python-dev
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-python-dev.outputs.tags }}
          labels: ${{ steps.meta-python-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
